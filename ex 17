using System;
using System.Collections.Generic;

class Dijkstra
{
    public static int[] FindShortestPaths(int[,] graph, int start)
    {
        int n = graph.GetLength(0);
        int[] dist = new int[n];
        bool[] visited = new bool[n];

        for (int i = 0; i < n; i++)
            dist[i] = int.MaxValue;

        dist[start] = 0;

        for (int count = 0; count < n - 1; count++)
        {
            int u = MinDistance(dist, visited);
            if (u == -1) break;
            visited[u] = true;

            for (int v = 0; v < n; v++)
            {
                if (!visited[v] && graph[u, v] != 0 && dist[u] != int.MaxValue &&
                    dist[u] + graph[u, v] < dist[v])
                {
                    dist[v] = dist[u] + graph[u, v];
                }
            }
        }

        return dist;
    }

    private static int MinDistance(int[] dist, bool[] visited)
    {
        int min = int.MaxValue, minIndex = -1;
        for (int v = 0; v < dist.Length; v++)
        {
            if (!visited[v] && dist[v] <= min)
            {
                min = dist[v];
                minIndex = v;
            }
        }
        return minIndex;
    }

    static void Main()
    {
        int[,] graph = {
            { 0, 4, 0, 0, 0, 0, 0, 8, 0 },
            { 4, 0, 8, 0, 0, 0, 0, 11, 0 },
            { 0, 8, 0, 7, 0, 4, 0, 0, 2 },
            { 0, 0, 7, 0, 9, 14, 0, 0, 0 },
            { 0, 0, 0, 9, 0, 10, 0, 0, 0 },
            { 0, 0, 4, 14, 10, 0, 2, 0, 0 },
            { 0, 0, 0, 0, 0, 2, 0, 1, 6 },
            { 8, 11, 0, 0, 0, 0, 1, 0, 7 },
            { 0, 0, 2, 0, 0, 0, 6, 7, 0 }
        };

        int start = 0;
        int[] distances = FindShortestPaths(graph, start);
        for (int i = 0; i < distances.Length; i++)
            Console.WriteLine($"Расстояние от {start} до {i}: {distances[i]}");
    }
}
